@use "sass:math";

.Animations {
  & .crt {
    &:before,
    &:after {
      content: "";
      display: block;
      position: absolute;
      z-index: 2;
      top: 0;
      left: 0;
      bottom: 0;
      right: 0;
      width: 100%;
    }

    // refresh line
    &:before {
      height: 80px;
      background: linear-gradient(
        180deg,
        transparent,
        hsla(0, 100%, 99%, 0.1) 90%,
        transparent
      );
      animation: vline 7s linear infinite;
    }
    @keyframes vline {
      0% {
        transform: translateY(-100%);
      }

      80%,
      to {
        transform: translateY(100vh);
      }
    }

    // screen-door effect
    &:after {
      height: 100%;
      background: linear-gradient(
          transparentize($dark, 1) 50%,
          transparentize(darken($dark, 10), 0.85) 50%
        ),
        linear-gradient(
          90deg,
          transparentize(#ff0000, 0.94),
          transparentize(#00ff00, 0.98),
          transparentize(#0000ff, 0.94)
        );
      background-size: 100% 2px, 4px 100%;
      animation: flicker 0.01s infinite;
    }
    @keyframes flicker {
      $steps: 20;
      @for $i from 0 through $steps {
        #{percentage($i*(math.div(1, $steps)))} {
          opacity: random();
        }
      }
    }
    &--extra {
      &:after {
        content: "";
        display: block;
        position: absolute;
        z-index: 2;
        top: 0;
        left: 0;
        bottom: 0;
        right: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(
            transparentize($dark, 1) 50%,
            transparentize(darken($dark, 10), 0.65) 50%
          ),
          linear-gradient(
            90deg,
            transparentize(#ff0000, 0.94),
            transparentize(#00ff00, 0.98),
            transparentize(#0000ff, 0.94)
          );
        background-size: 100% 2px, 3px 100%;
        animation: flicker 0.1s infinite;
      }
      @keyframes flicker {
        $steps: 20;
        @for $i from 0 through $steps {
          #{percentage($i*(math.div(1, $steps)))} {
            opacity: random();
          }
        }
      }
    }
  }

  & .channel {
    color: $terminal;
    position: absolute;
    top: 30px;
    right: 20px;
    font-size: 60px;
    visibility: hidden;
    pointer-events: none;
    animation: overlay-anim 5s linear;
    animation-fill-mode: forwards;

    @keyframes overlay-anim {
      0% {
        visibility: hidden;
      }
      20% {
        visibility: hidden;
      }
      21% {
        visibility: visible;
      }
      100% {
        visibility: hidden;
      }
    }
  }
}
